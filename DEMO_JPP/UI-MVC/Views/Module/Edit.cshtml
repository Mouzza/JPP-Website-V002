@model JPP.Domain.Dossiermodule
@{
    ViewBag.Title = "Wijzig dossiermodule";
}

<h2>Wijzig dossiermodule</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.vasteVragen)
    @Html.HiddenFor(model => model.dossierAntwoorden)
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.AdminNaam)
    @Html.HiddenFor(model => model.thema.dossierModules)
    @Html.HiddenFor(model => model.thema.agendaModules)
    @Html.HiddenFor(model => model.thema.id)




    <div class="form-horizontal">
        <h4>Dossiermodule</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Module naam</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.naam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.naam, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Begin datum</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.beginDatum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.beginDatum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Eind datum</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.eindDatum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.eindDatum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Verplichte volledigheids %</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.volledigheidsPercentage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.volledigheidsPercentage, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Status</label>
            <div class="col-md-10">
                @Html.DropDownList("MyType", EnumHelper.GetSelectList(typeof(JPP.Domain.ModuleStatus)), Model.status.ToString(), new { @class = "form-control" })


                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Thema</h4>
        <hr />
        <div class="form-group">
            <label class="control-label col-md-2">Thema</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.thema.inhoud, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.thema.inhoud, "", new { @class = "text-danger" })
            </div>
        </div>
        <h4>Centrale vraag</h4>
        <hr />
        <div class="form-group">
            <label class="control-label col-md-2">Vraag</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.centraleVraag.inhoud, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.centraleVraag.inhoud, "", new { @class = "text-danger" })
            </div>
        </div>
@*
       <h4>Vaste vragen voor het module</h4>
        <hr />
    @foreach (var vv in Model.vasteVragen)
    {

        <div class="form-group">
            <label class="control-label col-md-2">Vaste vraag</label>

            <div class="col-md-10">
                @Html.EditorFor(model => vv.inhoud, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => vv.inhoud, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Verplicht?</label>

            <div class="col-md-10">
                @Html.EditorFor(model => vv.verplicht, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => vv.verplicht, "", new { @class = "text-danger" })
            </div>
        </div>

    }*@


        <h4>Beloning</h4>
        <hr />

        <div class="form-group">
            <label class="control-label col-md-2">Beloning naam</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.beloning.naam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.beloning.naam, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Beschrijving</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.beloning.beschrijving, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.beloning.beschrijving, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Aantal winnaars</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.centraleVraag.aantalWinAntwoorden, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.centraleVraag.aantalWinAntwoorden, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Opslaan" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
